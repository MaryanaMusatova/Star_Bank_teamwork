databaseChangeLog:
  # Create main tables structure
  - changeSet:
      id: 1
      author: teem
      dbms: postgresql
      preConditions:
        - onFail: MARK_RAN
        - not:
            tableExists:
              tableName: DYNAMIC_RULES
              schemaName: public
      changes:
        - createTable:
            tableName: DYNAMIC_RULES
            columns:
              - column:
                  name: id
                  type: UUID
                  constraints:
                    primaryKey: true
                    nullable: false
                    defaultValueComputed: "gen_random_uuid()"
              - column:
                  name: product_name
                  type: VARCHAR(255)
              - column:
                  name: product_id
                  type: UUID
                  constraints:
                    unique: true
              - column:
                  name: product_text
                  type: TEXT
              - column:
                  name: created_at
                  type: TIMESTAMP
                  defaultValueComputed: "CURRENT_TIMESTAMP"
              - column:
                  name: updated_at
                  type: TIMESTAMP
                  defaultValueComputed: "CURRENT_TIMESTAMP"

  - changeSet:
      id: 1.1
      author: teem
      dbms: postgresql
      preConditions:
        - onFail: MARK_RAN
        - not:
            tableExists:
              tableName: rule
              schemaName: public
      changes:
        - createTable:
            tableName: rule
            columns:
              - column:
                  name: id
                  type: UUID
                  constraints:
                    primaryKey: true
                    nullable: false
                    defaultValueComputed: "gen_random_uuid()"
              - column:
                  name: product_name
                  type: VARCHAR(255)
              - column:
                  name: product_id
                  type: UUID
                  constraints:
                    unique: true
                    nullable: false
              - column:
                  name: product_text
                  type: TEXT
              - column:
                  name: dynamic_rule_id
                  type: UUID
                  constraints:
                    foreignKeyName: fk_rule_dynamic_rule
                    referencedTableName: dynamic_rules
                    referencedColumnNames: id
                    onDelete: CASCADE

  - changeSet:
      id: 1.2
      author: teem
      dbms: postgresql
      preConditions:
        - onFail: MARK_RAN
        - not:
            tableExists:
              tableName: query
              schemaName: public
      changes:
        - createTable:
            tableName: query
            columns:
              - column:
                  name: id
                  type: UUID
                  constraints:
                    primaryKey: true
                    nullable: false
                    defaultValueComputed: "gen_random_uuid()"
              - column:
                  name: rule_id
                  type: UUID
                  constraints:
                    nullable: false
                    foreignKeyName: fk_query_rule
                    referencedTableName: rule
                    referencedColumnNames: id
              - column:
                  name: query_type
                  type: VARCHAR(255)
              - column:
                  name: negate
                  type: BOOLEAN
              - column:
                  name: arguments
                  type: JSONB

  - changeSet:
      id: 1.3
      author: teem
      dbms: postgresql
      preConditions:
        - onFail: MARK_RAN
        - not:
            tableExists:
              tableName: rule_stats
              schemaName: public
      changes:
        - createTable:
            tableName: rule_stats
            columns:
              - column:
                  name: rule_id
                  type: UUID
                  constraints:
                    primaryKey: true
                    nullable: false
                    foreignKeyName: fk_rule_stats_rule
                    referencedTableName: rule
                    referencedColumnNames: id
                    onDelete: CASCADE
              - column:
                  name: count
                  type: INTEGER
                  defaultValueNumeric: 0
                  constraints:
                    nullable: false

  # Create indexes
  - changeSet:
      id: 2
      author: teem
      dbms: postgresql
      preConditions:
        - onFail: MARK_RAN
        - not:
            indexExists:
              indexName: idx_dynamic_rules_product_id
              tableName: dynamic_rules
              schemaName: public
      changes:
        - createIndex:
            tableName: dynamic_rules
            indexName: idx_dynamic_rules_product_id
            columns:
              - column:
                  name: product_id
                  type: UUID

  - changeSet:
      id: 2.1
      author: teem
      dbms: postgresql
      preConditions:
        - onFail: MARK_RAN
        - not:
            indexExists:
              indexName: idx_rule_product_id
              tableName: rule
              schemaName: public
      changes:
        - createIndex:
            tableName: rule
            indexName: idx_rule_product_id
            columns:
              - column:
                  name: product_id
                  type: UUID

  - changeSet:
      id: 2.2
      author: teem
      dbms: postgresql
      preConditions:
        - onFail: MARK_RAN
        - not:
            indexExists:
              indexName: idx_query_rule_id
              tableName: query
              schemaName: public
      changes:
        - createIndex:
            tableName: query
            indexName: idx_query_rule_id
            columns:
              - column:
                  name: rule_id
                  type: UUID

  - changeSet:
      id: 2.3
      author: teem
      dbms: postgresql
      preConditions:
        - onFail: MARK_RAN
        - not:
            indexExists:
              indexName: idx_rule_stats_count
              tableName: rule_stats
              schemaName: public
      changes:
        - createIndex:
            tableName: rule_stats
            indexName: idx_rule_stats_count
            columns:
              - column:
                  name: count
                  type: INTEGER

  - changeSet:
      id: 2.4
      author: teem
      dbms: postgresql
      changes:
        - createIndex:
            tableName: rule
            indexName: idx_rule_dynamic_rule_id
            columns:
              - column:
                  name: dynamic_rule_id
                  type: UUID

  # Initial data for dynamic_rules
  - changeSet:
      id: 3
      author: teem
      dbms: postgresql
      preConditions:
        - onFail: MARK_RAN
        - sqlCheck:
            expectedResult: "0"
            sql: "SELECT COUNT(*) FROM dynamic_rules WHERE product_id = '00000000-0000-0000-0000-000000000000'"
      changes:
        - insert:
            tableName: dynamic_rules
            columns:
              - column:
                  name: id
                  valueComputed: "gen_random_uuid()"
              - column:
                  name: product_name
                  value: "Общий финансовый продукт"
              - column:
                  name: product_id
                  value: "00000000-0000-0000-0000-000000000000"
              - column:
                  name: product_text
                  value: "Базовое описание для всех продуктов"

  # Initial data for rules
  - changeSet:
      id: 4
      author: teem
      dbms: postgresql
      preConditions:
        - onFail: MARK_RAN
        - sqlCheck:
            expectedResult: "0"
            sql: "SELECT COUNT(*) FROM rule WHERE product_id = '59efc529-2fff-41af-baff-90ccd7402925'"
      changes:
        - insert:
            tableName: rule
            columns:
              - column:
                  name: id
                  valueComputed: "gen_random_uuid()"
              - column:
                  name: product_name
                  value: "Top Saving"
              - column:
                  name: product_id
                  value: "59efc529-2fff-41af-baff-90ccd7402925"
              - column:
                  name: product_text
                  value: "Описание Top Saving"
              - column:
                  name: dynamic_rule_id
                  valueComputed: "(SELECT id FROM dynamic_rules WHERE product_id = '00000000-0000-0000-0000-000000000000')"

        - insert:
            tableName: query
            columns:
              - column:
                  name: id
                  valueComputed: "gen_random_uuid()"
              - column:
                  name: rule_id
                  valueComputed: "(SELECT id FROM rule WHERE product_id = '59efc529-2fff-41af-baff-90ccd7402925')"
              - column:
                  name: query_type
                  value: "USER_OF"
              - column:
                  name: arguments
                  value: '{"product_type": "DEBIT"}'
              - column:
                  name: negate
                  value: "false"

  - changeSet:
      id: 5
      author: teem
      dbms: postgresql
      preConditions:
        - onFail: MARK_RAN
        - sqlCheck:
            expectedResult: "0"
            sql: "SELECT COUNT(*) FROM rule WHERE product_id = '147f6a0f-3b91-413b-ab99-87f081d60d5a'"
      changes:
        - insert:
            tableName: rule
            columns:
              - column:
                  name: id
                  valueComputed: "gen_random_uuid()"
              - column:
                  name: product_name
                  value: "Invest 500"
              - column:
                  name: product_id
                  value: "147f6a0f-3b91-413b-ab99-87f081d60d5a"
              - column:
                  name: product_text
                  value: "Описание Invest 500"
              - column:
                  name: dynamic_rule_id
                  valueComputed: "(SELECT id FROM dynamic_rules WHERE product_id = '00000000-0000-0000-0000-000000000000')"

        - insert:
            tableName: query
            columns:
              - column:
                  name: id
                  valueComputed: "gen_random_uuid()"
              - column:
                  name: rule_id
                  valueComputed: "(SELECT id FROM rule WHERE product_id = '147f6a0f-3b91-413b-ab99-87f081d60d5a')"
              - column:
                  name: query_type
                  value: "USER_OF"
              - column:
                  name: arguments
                  value: '{"product_type": "DEBIT"}'
              - column:
                  name: negate
                  value: "false"

  - changeSet:
      id: 6
      author: teem
      dbms: postgresql
      preConditions:
        - onFail: MARK_RAN
        - sqlCheck:
            expectedResult: "0"
            sql: "SELECT COUNT(*) FROM rule WHERE product_id = 'ab138afb-f3ba-4a93-b74f-0fcee86d447f'"
      changes:
        - insert:
            tableName: rule
            columns:
              - column:
                  name: id
                  valueComputed: "gen_random_uuid()"
              - column:
                  name: product_name
                  value: "Простой кредит"
              - column:
                  name: product_id
                  value: "ab138afb-f3ba-4a93-b74f-0fcee86d447f"
              - column:
                  name: product_text
                  value: "Описание Простого кредита"
              - column:
                  name: dynamic_rule_id
                  valueComputed: "(SELECT id FROM dynamic_rules WHERE product_id = '00000000-0000-0000-0000-000000000000')"

        - insert:
            tableName: query
            columns:
              - column:
                  name: id
                  valueComputed: "gen_random_uuid()"
              - column:
                  name: rule_id
                  valueComputed: "(SELECT id FROM rule WHERE product_id = 'ab138afb-f3ba-4a93-b74f-0fcee86d447f')"
              - column:
                  name: query_type
                  value: "USER_OF"
              - column:
                  name: arguments
                  value: '{"product_type": "CREDIT"}'
              - column:
                  name: negate
                  value: "true"

  # Create view for combined data
  - changeSet:
      id: 7
      author: teem
      dbms: postgresql
      preConditions:
        - onFail: MARK_RAN
        - not:
            viewExists:
              viewName: v_combined_rules
              schemaName: public
      changes:
        - createView:
            viewName: v_combined_rules
            replaceIfExists: true
            selectQuery: |
              SELECT 
                r.id as rule_id,
                r.product_id,
                r.product_name as rule_name,
                r.product_text as rule_description,
                dr.id as dynamic_rule_id,
                dr.product_name as dynamic_rule_name,
                dr.product_text as dynamic_rule_description,
                dr.created_at,
                dr.updated_at
              FROM rule r
              LEFT JOIN dynamic_rules dr ON r.dynamic_rule_id = dr.id